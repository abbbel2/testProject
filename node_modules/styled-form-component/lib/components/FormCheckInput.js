"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FormCheckInput = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styledBaseComponents = require("styled-base-components");

var _styledConfig = require("styled-config");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  margin-top: ", ";\n  margin-left: ", ";\n  box-sizing: border-box;\n  ", ";\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    color: ", ";\n    & + label {\n      color: ", ";\n    };\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var color = function color(props) {
  return props.disabled && (0, _styledComponents.css)(_templateObject(), (0, _styledConfig.getColor)(props, 'formCheckInput', 'colorDisabled'), (0, _styledConfig.getColor)(props, 'formCheckInput', 'colorDisabledLabel'));
};

var FormCheckInput = (0, _styledComponents.default)(_styledBaseComponents.Input)(_templateObject2(), function (props) {
  return (0, _styledConfig.getMargin)(props, 'formCheckInput', 'top');
}, function (props) {
  return (0, _styledConfig.getMargin)(props, 'formCheckInput', 'left');
}, function (props) {
  return color(props);
});
exports.FormCheckInput = FormCheckInput;
FormCheckInput.defaultProps = {
  theme: _styledConfig.theme
};